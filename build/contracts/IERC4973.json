{
  "contractName": "IERC4973",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "unequip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "uri",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "give",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "uri",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "take",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"give\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"take\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"unequip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-4973 Note: the ERC-165 identifier for this interface is 0x8d7bac72\",\"events\":{\"Transfer(address,address,uint256)\":{\"details\":\"This emits when ownership of any ABT changes by any mechanism.  This event emits when ABTs are given or equipped and unequipped  (`to` == 0).\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address)\":{\"details\":\"ABTs assigned to the zero address are considered invalid, and this  function throws for queries about the zero address.\",\"params\":{\"owner\":\"An address for whom to query the balance\"},\"returns\":{\"_0\":\"The number of ABTs owned by `address owner`, possibly zero\"}},\"give(address,string,bytes)\":{\"details\":\"Throws unless `bytes signature` represents an EIP-2098 Compact  Signature of the EIP-712 structured data hash  `Agreement(address active,address passive,string tokenURI)` expressing  `address to`'s explicit agreement to be publicly associated with  `msg.sender` and `string tokenURI`. A unique `uint256 tokenId` must be  generated by type-casting the `bytes32` EIP-712 structured data hash to a  `uint256`. If `bytes signature` is empty or `address to` is a contract,  an EIP-1271-compatible call to `function isValidSignatureNow(...)` must  be made to `address to`. A successful execution must result in the  `event Transfer(msg.sender, to, tokenId)`. Once an ABT exists as an  `uint256 tokenId` in the contract, `function give(...)` must throw.\",\"params\":{\"signature\":\"A EIP-2098-compatible Compact Signature of the EIP-712  structured data hash  `Agreement(address active,address passive,string tokenURI)` signed by  `address to`.\",\"to\":\"The receiver of the ABT.\",\"uri\":\"A distinct Uniform Resource Identifier (URI) for a given ABT.\"},\"returns\":{\"_0\":\"A unique `uint256 tokenId` generated by type-casting the `bytes32`  EIP-712 structured data hash to a `uint256`.\"}},\"ownerOf(uint256)\":{\"details\":\"ABTs assigned to zero address are considered invalid, and queries  about them do throw.\",\"params\":{\"tokenId\":\"The identifier for an ABT.\"},\"returns\":{\"_0\":\"The address of the owner bound to the ABT.\"}},\"take(address,string,bytes)\":{\"details\":\"Throws unless `bytes signature` represents an EIP-2098 Compact  Signature of the EIP-712 structured data hash  `Agreement(address active,address passive,string tokenURI)` expressing  `address from`'s explicit agreement to be publicly associated with  `msg.sender` and `string tokenURI`. A unique `uint256 tokenId` must be  generated by type-casting the `bytes32` EIP-712 structured data hash to a  `uint256`. If `bytes signature` is empty or `address from` is a contract,  an EIP-1271-compatible call to `function isValidSignatureNow(...)` must  be made to `address from`. A successful execution must result in the  emission of an `event Transfer(from, msg.sender, tokenId)`. Once an ABT  exists as an `uint256 tokenId` in the contract, `function take(...)` must  throw.\",\"params\":{\"from\":\"The origin of the ABT.\",\"signature\":\"A EIP-2098-compatible Compact Signature of the EIP-712  structured data hash  `Agreement(address active,address passive,string tokenURI)` signed by  `address from`.\",\"uri\":\"A distinct Uniform Resource Identifier (URI) for a given ABT.\"},\"returns\":{\"_0\":\"A unique `uint256 tokenId` generated by type-casting the `bytes32`  EIP-712 structured data hash to a `uint256`.\"}},\"unequip(uint256)\":{\"details\":\"Must emit a `event Transfer` with the `address to` field pointing to  the zero address.\",\"params\":{\"tokenId\":\"The identifier for an ABT.\"}}},\"title\":\"Account-bound tokens\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"balanceOf(address)\":{\"notice\":\"Count all ABTs assigned to an owner\"},\"give(address,string,bytes)\":{\"notice\":\"Creates and transfers the ownership of an ABT from the  transaction's `msg.sender` to `address to`.\"},\"ownerOf(uint256)\":{\"notice\":\"Find the address bound to an ERC4973 account-bound token\"},\"take(address,string,bytes)\":{\"notice\":\"Creates and transfers the ownership of an ABT from an `address from` to the transaction's `msg.sender`.\"},\"unequip(uint256)\":{\"notice\":\"Removes the `uint256 tokenId` from an account. At any time, an  ABT receiver must be able to disassociate themselves from an ABT  publicly through calling this function. After successfully executing this  function, given the parameters for calling `function give` or  `function take` a token must be re-equipable.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/accountbounds/interfaces/IERC4973.sol\":\"IERC4973\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1500},\"remappings\":[]},\"sources\":{\"project:/contracts/accountbounds/interfaces/IERC4973.sol\":{\"keccak256\":\"0xab03b9347fea7469c2f0c769e1a161d7ce5f28e028a42ad587ea7f08f1cacf63\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d80a9057bdd01db785adba419ca5c0acdc069589e42ba7ab53345a5860c12008\",\"dweb:/ipfs/QmZ22x2zXec1z4PeyrfWVV7aLf3tdTpowgX4FF32XNStoD\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.7.0 <0.9.0;\n\n/// @title Account-bound tokens\n/// @dev See https://eips.ethereum.org/EIPS/eip-4973\n/// Note: the ERC-165 identifier for this interface is 0x8d7bac72\ninterface IERC4973 {\n    /// @dev This emits when ownership of any ABT changes by any mechanism.\n    ///  This event emits when ABTs are given or equipped and unequipped\n    ///  (`to` == 0).\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n    /// @notice Count all ABTs assigned to an owner\n    /// @dev ABTs assigned to the zero address are considered invalid, and this\n    ///  function throws for queries about the zero address.\n    /// @param owner An address for whom to query the balance\n    /// @return The number of ABTs owned by `address owner`, possibly zero\n\n    function balanceOf(address owner) external view returns (uint256);\n    /// @notice Find the address bound to an ERC4973 account-bound token\n    /// @dev ABTs assigned to zero address are considered invalid, and queries\n    ///  about them do throw.\n    /// @param tokenId The identifier for an ABT.\n    /// @return The address of the owner bound to the ABT.\n    function ownerOf(uint256 tokenId) external view returns (address);\n    /// @notice Removes the `uint256 tokenId` from an account. At any time, an\n    ///  ABT receiver must be able to disassociate themselves from an ABT\n    ///  publicly through calling this function. After successfully executing this\n    ///  function, given the parameters for calling `function give` or\n    ///  `function take` a token must be re-equipable.\n    /// @dev Must emit a `event Transfer` with the `address to` field pointing to\n    ///  the zero address.\n    /// @param tokenId The identifier for an ABT.\n    function unequip(uint256 tokenId) external;\n    /// @notice Creates and transfers the ownership of an ABT from the\n    ///  transaction's `msg.sender` to `address to`.\n    /// @dev Throws unless `bytes signature` represents an EIP-2098 Compact\n    ///  Signature of the EIP-712 structured data hash\n    ///  `Agreement(address active,address passive,string tokenURI)` expressing\n    ///  `address to`'s explicit agreement to be publicly associated with\n    ///  `msg.sender` and `string tokenURI`. A unique `uint256 tokenId` must be\n    ///  generated by type-casting the `bytes32` EIP-712 structured data hash to a\n    ///  `uint256`. If `bytes signature` is empty or `address to` is a contract,\n    ///  an EIP-1271-compatible call to `function isValidSignatureNow(...)` must\n    ///  be made to `address to`. A successful execution must result in the\n    ///  `event Transfer(msg.sender, to, tokenId)`. Once an ABT exists as an\n    ///  `uint256 tokenId` in the contract, `function give(...)` must throw.\n    /// @param to The receiver of the ABT.\n    /// @param uri A distinct Uniform Resource Identifier (URI) for a given ABT.\n    /// @param signature A EIP-2098-compatible Compact Signature of the EIP-712\n    ///  structured data hash\n    ///  `Agreement(address active,address passive,string tokenURI)` signed by\n    ///  `address to`.\n    /// @return A unique `uint256 tokenId` generated by type-casting the `bytes32`\n    ///  EIP-712 structured data hash to a `uint256`.\n    function give(address to, string calldata uri, bytes calldata signature) external returns (uint256);\n    /// @notice Creates and transfers the ownership of an ABT from an\n    /// `address from` to the transaction's `msg.sender`.\n    /// @dev Throws unless `bytes signature` represents an EIP-2098 Compact\n    ///  Signature of the EIP-712 structured data hash\n    ///  `Agreement(address active,address passive,string tokenURI)` expressing\n    ///  `address from`'s explicit agreement to be publicly associated with\n    ///  `msg.sender` and `string tokenURI`. A unique `uint256 tokenId` must be\n    ///  generated by type-casting the `bytes32` EIP-712 structured data hash to a\n    ///  `uint256`. If `bytes signature` is empty or `address from` is a contract,\n    ///  an EIP-1271-compatible call to `function isValidSignatureNow(...)` must\n    ///  be made to `address from`. A successful execution must result in the\n    ///  emission of an `event Transfer(from, msg.sender, tokenId)`. Once an ABT\n    ///  exists as an `uint256 tokenId` in the contract, `function take(...)` must\n    ///  throw.\n    /// @param from The origin of the ABT.\n    /// @param uri A distinct Uniform Resource Identifier (URI) for a given ABT.\n    /// @param signature A EIP-2098-compatible Compact Signature of the EIP-712\n    ///  structured data hash\n    ///  `Agreement(address active,address passive,string tokenURI)` signed by\n    ///  `address from`.\n    /// @return A unique `uint256 tokenId` generated by type-casting the `bytes32`\n    ///  EIP-712 structured data hash to a `uint256`.\n    function take(address from, string calldata uri, bytes calldata signature) external returns (uint256);\n}\n",
  "sourcePath": "C:\\Users\\Arogundade Ibrahim\\Documents\\web3\\Buidl\\contracts\\accountbounds\\interfaces\\IERC4973.sol",
  "ast": {
    "absolutePath": "project:/contracts/accountbounds/interfaces/IERC4973.sol",
    "exportedSymbols": {
      "IERC4973": [
        4705
      ]
    },
    "id": 4706,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4648,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:31:24"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IERC4973",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 4649,
          "nodeType": "StructuredDocumentation",
          "src": "69:151:24",
          "text": "@title Account-bound tokens\n @dev See https://eips.ethereum.org/EIPS/eip-4973\n Note: the ERC-165 identifier for this interface is 0x8d7bac72"
        },
        "fullyImplemented": false,
        "id": 4705,
        "linearizedBaseContracts": [
          4705
        ],
        "name": "IERC4973",
        "nameLocation": "230:8:24",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 4650,
              "nodeType": "StructuredDocumentation",
              "src": "245:166:24",
              "text": "@dev This emits when ownership of any ABT changes by any mechanism.\n  This event emits when ABTs are given or equipped and unequipped\n  (`to` == 0)."
            },
            "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
            "id": 4658,
            "name": "Transfer",
            "nameLocation": "422:8:24",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4652,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "447:4:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4658,
                  "src": "431:20:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4651,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "431:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4654,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "469:2:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4658,
                  "src": "453:18:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4653,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "453:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4656,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "489:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4658,
                  "src": "473:23:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4655,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "473:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "430:67:24"
            },
            "src": "416:82:24"
          },
          {
            "documentation": {
              "id": 4659,
              "nodeType": "StructuredDocumentation",
              "src": "503:326:24",
              "text": "@notice Count all ABTs assigned to an owner\n @dev ABTs assigned to the zero address are considered invalid, and this\n  function throws for queries about the zero address.\n @param owner An address for whom to query the balance\n @return The number of ABTs owned by `address owner`, possibly zero"
            },
            "functionSelector": "70a08231",
            "id": 4666,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "843:9:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4662,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4661,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "861:5:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4666,
                  "src": "853:13:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4660,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "853:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "852:15:24"
            },
            "returnParameters": {
              "id": 4665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4664,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4666,
                  "src": "891:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4663,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "891:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "890:9:24"
            },
            "scope": 4705,
            "src": "834:66:24",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 4667,
              "nodeType": "StructuredDocumentation",
              "src": "905:286:24",
              "text": "@notice Find the address bound to an ERC4973 account-bound token\n @dev ABTs assigned to zero address are considered invalid, and queries\n  about them do throw.\n @param tokenId The identifier for an ABT.\n @return The address of the owner bound to the ABT."
            },
            "functionSelector": "6352211e",
            "id": 4674,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "1205:7:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4669,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1221:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4674,
                  "src": "1213:15:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4668,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1213:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1212:17:24"
            },
            "returnParameters": {
              "id": 4673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4672,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4674,
                  "src": "1253:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4671,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1253:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1252:9:24"
            },
            "scope": 4705,
            "src": "1196:66:24",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 4675,
              "nodeType": "StructuredDocumentation",
              "src": "1267:516:24",
              "text": "@notice Removes the `uint256 tokenId` from an account. At any time, an\n  ABT receiver must be able to disassociate themselves from an ABT\n  publicly through calling this function. After successfully executing this\n  function, given the parameters for calling `function give` or\n  `function take` a token must be re-equipable.\n @dev Must emit a `event Transfer` with the `address to` field pointing to\n  the zero address.\n @param tokenId The identifier for an ABT."
            },
            "functionSelector": "d179e3d0",
            "id": 4680,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "unequip",
            "nameLocation": "1797:7:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4677,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1813:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4680,
                  "src": "1805:15:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4676,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1805:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1804:17:24"
            },
            "returnParameters": {
              "id": 4679,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1830:0:24"
            },
            "scope": 4705,
            "src": "1788:43:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 4681,
              "nodeType": "StructuredDocumentation",
              "src": "1836:1432:24",
              "text": "@notice Creates and transfers the ownership of an ABT from the\n  transaction's `msg.sender` to `address to`.\n @dev Throws unless `bytes signature` represents an EIP-2098 Compact\n  Signature of the EIP-712 structured data hash\n  `Agreement(address active,address passive,string tokenURI)` expressing\n  `address to`'s explicit agreement to be publicly associated with\n  `msg.sender` and `string tokenURI`. A unique `uint256 tokenId` must be\n  generated by type-casting the `bytes32` EIP-712 structured data hash to a\n  `uint256`. If `bytes signature` is empty or `address to` is a contract,\n  an EIP-1271-compatible call to `function isValidSignatureNow(...)` must\n  be made to `address to`. A successful execution must result in the\n  `event Transfer(msg.sender, to, tokenId)`. Once an ABT exists as an\n  `uint256 tokenId` in the contract, `function give(...)` must throw.\n @param to The receiver of the ABT.\n @param uri A distinct Uniform Resource Identifier (URI) for a given ABT.\n @param signature A EIP-2098-compatible Compact Signature of the EIP-712\n  structured data hash\n  `Agreement(address active,address passive,string tokenURI)` signed by\n  `address to`.\n @return A unique `uint256 tokenId` generated by type-casting the `bytes32`\n  EIP-712 structured data hash to a `uint256`."
            },
            "functionSelector": "ec64948e",
            "id": 4692,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "give",
            "nameLocation": "3282:4:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4683,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3295:2:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4692,
                  "src": "3287:10:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4682,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3287:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4685,
                  "mutability": "mutable",
                  "name": "uri",
                  "nameLocation": "3315:3:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4692,
                  "src": "3299:19:24",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4684,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3299:6:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4687,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "3335:9:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4692,
                  "src": "3320:24:24",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4686,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3320:5:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3286:59:24"
            },
            "returnParameters": {
              "id": 4691,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4690,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4692,
                  "src": "3364:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4689,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3364:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3363:9:24"
            },
            "scope": 4705,
            "src": "3273:100:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 4693,
              "nodeType": "StructuredDocumentation",
              "src": "3378:1470:24",
              "text": "@notice Creates and transfers the ownership of an ABT from an\n `address from` to the transaction's `msg.sender`.\n @dev Throws unless `bytes signature` represents an EIP-2098 Compact\n  Signature of the EIP-712 structured data hash\n  `Agreement(address active,address passive,string tokenURI)` expressing\n  `address from`'s explicit agreement to be publicly associated with\n  `msg.sender` and `string tokenURI`. A unique `uint256 tokenId` must be\n  generated by type-casting the `bytes32` EIP-712 structured data hash to a\n  `uint256`. If `bytes signature` is empty or `address from` is a contract,\n  an EIP-1271-compatible call to `function isValidSignatureNow(...)` must\n  be made to `address from`. A successful execution must result in the\n  emission of an `event Transfer(from, msg.sender, tokenId)`. Once an ABT\n  exists as an `uint256 tokenId` in the contract, `function take(...)` must\n  throw.\n @param from The origin of the ABT.\n @param uri A distinct Uniform Resource Identifier (URI) for a given ABT.\n @param signature A EIP-2098-compatible Compact Signature of the EIP-712\n  structured data hash\n  `Agreement(address active,address passive,string tokenURI)` signed by\n  `address from`.\n @return A unique `uint256 tokenId` generated by type-casting the `bytes32`\n  EIP-712 structured data hash to a `uint256`."
            },
            "functionSelector": "a3947803",
            "id": 4704,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "take",
            "nameLocation": "4862:4:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4700,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4695,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4875:4:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4704,
                  "src": "4867:12:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4694,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4867:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4697,
                  "mutability": "mutable",
                  "name": "uri",
                  "nameLocation": "4897:3:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4704,
                  "src": "4881:19:24",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4696,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4881:6:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4699,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "4917:9:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4704,
                  "src": "4902:24:24",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4698,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4902:5:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4866:61:24"
            },
            "returnParameters": {
              "id": 4703,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4702,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4704,
                  "src": "4946:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4701,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4946:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4945:9:24"
            },
            "scope": 4705,
            "src": "4853:102:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4706,
        "src": "220:4737:24",
        "usedErrors": []
      }
    ],
    "src": "36:4922:24"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.16+commit.07a7930e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.10",
  "updatedAt": "2022-11-11T04:27:15.613Z",
  "devdoc": {
    "details": "See https://eips.ethereum.org/EIPS/eip-4973 Note: the ERC-165 identifier for this interface is 0x8d7bac72",
    "events": {
      "Transfer(address,address,uint256)": {
        "details": "This emits when ownership of any ABT changes by any mechanism.  This event emits when ABTs are given or equipped and unequipped  (`to` == 0)."
      }
    },
    "kind": "dev",
    "methods": {
      "balanceOf(address)": {
        "details": "ABTs assigned to the zero address are considered invalid, and this  function throws for queries about the zero address.",
        "params": {
          "owner": "An address for whom to query the balance"
        },
        "returns": {
          "_0": "The number of ABTs owned by `address owner`, possibly zero"
        }
      },
      "give(address,string,bytes)": {
        "details": "Throws unless `bytes signature` represents an EIP-2098 Compact  Signature of the EIP-712 structured data hash  `Agreement(address active,address passive,string tokenURI)` expressing  `address to`'s explicit agreement to be publicly associated with  `msg.sender` and `string tokenURI`. A unique `uint256 tokenId` must be  generated by type-casting the `bytes32` EIP-712 structured data hash to a  `uint256`. If `bytes signature` is empty or `address to` is a contract,  an EIP-1271-compatible call to `function isValidSignatureNow(...)` must  be made to `address to`. A successful execution must result in the  `event Transfer(msg.sender, to, tokenId)`. Once an ABT exists as an  `uint256 tokenId` in the contract, `function give(...)` must throw.",
        "params": {
          "signature": "A EIP-2098-compatible Compact Signature of the EIP-712  structured data hash  `Agreement(address active,address passive,string tokenURI)` signed by  `address to`.",
          "to": "The receiver of the ABT.",
          "uri": "A distinct Uniform Resource Identifier (URI) for a given ABT."
        },
        "returns": {
          "_0": "A unique `uint256 tokenId` generated by type-casting the `bytes32`  EIP-712 structured data hash to a `uint256`."
        }
      },
      "ownerOf(uint256)": {
        "details": "ABTs assigned to zero address are considered invalid, and queries  about them do throw.",
        "params": {
          "tokenId": "The identifier for an ABT."
        },
        "returns": {
          "_0": "The address of the owner bound to the ABT."
        }
      },
      "take(address,string,bytes)": {
        "details": "Throws unless `bytes signature` represents an EIP-2098 Compact  Signature of the EIP-712 structured data hash  `Agreement(address active,address passive,string tokenURI)` expressing  `address from`'s explicit agreement to be publicly associated with  `msg.sender` and `string tokenURI`. A unique `uint256 tokenId` must be  generated by type-casting the `bytes32` EIP-712 structured data hash to a  `uint256`. If `bytes signature` is empty or `address from` is a contract,  an EIP-1271-compatible call to `function isValidSignatureNow(...)` must  be made to `address from`. A successful execution must result in the  emission of an `event Transfer(from, msg.sender, tokenId)`. Once an ABT  exists as an `uint256 tokenId` in the contract, `function take(...)` must  throw.",
        "params": {
          "from": "The origin of the ABT.",
          "signature": "A EIP-2098-compatible Compact Signature of the EIP-712  structured data hash  `Agreement(address active,address passive,string tokenURI)` signed by  `address from`.",
          "uri": "A distinct Uniform Resource Identifier (URI) for a given ABT."
        },
        "returns": {
          "_0": "A unique `uint256 tokenId` generated by type-casting the `bytes32`  EIP-712 structured data hash to a `uint256`."
        }
      },
      "unequip(uint256)": {
        "details": "Must emit a `event Transfer` with the `address to` field pointing to  the zero address.",
        "params": {
          "tokenId": "The identifier for an ABT."
        }
      }
    },
    "title": "Account-bound tokens",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "balanceOf(address)": {
        "notice": "Count all ABTs assigned to an owner"
      },
      "give(address,string,bytes)": {
        "notice": "Creates and transfers the ownership of an ABT from the  transaction's `msg.sender` to `address to`."
      },
      "ownerOf(uint256)": {
        "notice": "Find the address bound to an ERC4973 account-bound token"
      },
      "take(address,string,bytes)": {
        "notice": "Creates and transfers the ownership of an ABT from an `address from` to the transaction's `msg.sender`."
      },
      "unequip(uint256)": {
        "notice": "Removes the `uint256 tokenId` from an account. At any time, an  ABT receiver must be able to disassociate themselves from an ABT  publicly through calling this function. After successfully executing this  function, given the parameters for calling `function give` or  `function take` a token must be re-equipable."
      }
    },
    "version": 1
  }
}